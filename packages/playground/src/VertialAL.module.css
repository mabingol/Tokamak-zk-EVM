/* ===== Base Styles ===== */
.borderTop {
    align-self: stretch;
    position: relative;
    background-color: #a8a8a8;
    height: 1px;
  }
  
  .borderLeft {
    align-self: stretch;
    width: 1px;
    position: relative;
    background-color: #a8a8a8;
  }
  
  .inputText {
    position: relative;
    width: 100%;
    height: 100%;
    border: none;
    background: transparent;
    padding: 0 16px;
    font-family: 'IBM Plex Mono';
    font-size: 16px;
    outline: none;
  }
  
  .inputText::placeholder {
    color: #999;
  }
  
  .labelWrapper {
    flex: 1;
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: flex-start;
    padding: 0px 0px 2px;
  }
  
  .borderRight {
    align-self: stretch;
    width: 1px; /* Base width */
    position: relative;
    background-color: #5f5f5f;
  }
  
  .horizontalAl {
    width: 480px; /* Base width */
    background-color: #f7f7f7;
    height: 57px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }
  
  .borderBottom {
    align-self: stretch;
    position: relative;
    background-color: #5f5f5f;
    height: 1px;
  }
  
  .borderBottom1 {
    align-self: stretch;
    position: relative;
    height: 1px;
  }
  
  /* (Optional) Default container state */
  .property1defalut {
    position: relative;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    text-align: left;
    font-size: 24px;
    color: #999;
    font-family: 'IBM Plex Mono';
  }
  
  /* ===== Hover Styles (from Figma) ===== */
  .property1hover:hover .horizontalAl {
    /* Note: fixed width; change to 100% if you need a responsive design */
    width: 480px;
    position: relative;
    background-color: #f7f7f7;
    height: 56px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 8px;
    text-align: left;
    font-size: 24px;
    color: #222;
    font-family: 'IBM Plex Mono';
  }
  
  .property1hover:hover .borderRight {
    width: 2px;
  }
  
  .property1hover:hover .inputText::placeholder {
    color: #222;
  }
  
  /* ===== Active Styles (from Figma) ===== */
  .property1active {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    text-align: left;
    font-size: 24px;
    color: #222;
    font-family: 'IBM Plex Mono';
  }
  
  /* When active, move the placeholder text a little to the right */
  .property1active .inputText::placeholder {
    text-indent: 10px;
  }
  
  /* ===== Disabled Styles ===== */
  .property1disable {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    text-align: left;
    font-size: 24px;
    color: #444;
    font-family: 'IBM Plex Mono';
  }
  
  /* Override inner container background when disabled */
  .property1disable .horizontalAl {
    background-color: #d0d0d7;
    height: 56px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }
  
  /* ===== Error Styles ===== */
  .property1error {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    text-align: left;
    font-size: 24px;
    color: #a01313; /* Error text color */
    font-family: 'IBM Plex Mono';
  }
  
  /* Force the input text and placeholder to become red in error state */
  .property1error .inputText {
    color: #a01313;
  }
  
  .property1error .inputText::placeholder {
    color: #a01313;
  }
  
  /* Note: The borders remain unchanged in the error state */
  